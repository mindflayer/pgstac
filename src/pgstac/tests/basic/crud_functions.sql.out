-- run tests as pgstac_ingest
SET ROLE pgstac_ingest;
SET
SET pgstac.use_queue=FALSE;
SET
SELECT get_setting_bool('use_queue');
 f

SET pgstac.update_collection_extent=TRUE;
SET
SELECT get_setting_bool('update_collection_extent');
 t

--create base data to use with tests
CREATE TEMP TABLE test_items AS
SELECT jsonb_build_object(
    'id', concat('pgstactest-crudtest-', (row_number() over ())::text),
    'collection', 'pgstactest-crudtest',
    'geometry', '{"type": "Polygon", "coordinates": [[[-85.309412, 30.933949], [-85.308201, 31.002658], [-85.378084, 31.003555], [-85.379245, 30.934843], [-85.309412, 30.933949]]]}'::json,
    'properties', jsonb_build_object( 'datetime', g::text)
) as content FROM generate_series('2020-01-01'::timestamptz, '2022-01-01'::timestamptz, '1 month'::interval) g;
SELECT 25
--test collection partioned by year
INSERT INTO collections (content, partition_trunc) VALUES ('{"id":"pgstactest-crudtest"}', 'year');
INSERT 0 1
-- Create an item
SELECT create_item((SELECT content FROM test_items LIMIT 1));


SELECT * FROM items WHERE collection='pgstactest-crudtest';
 pgstactest-crudtest-1 | 0103000020E610000001000000050000005B3FFD67CD5355C0C4211B4817EF3E400CE6AF90B95355C0A112D731AE003F4004C93B87325855C0BEBC00FBE8003F40FA0AD28C455855C000E5EFDE51EF3E405B3FFD67CD5355C0C4211B4817EF3E40 | pgstactest-crudtest | 2020-01-01 00:00:00+00 | 2020-01-01 00:00:00+00 | {"properties": {"datetime": "2020-01-01 00:00:00+00"}} |

-- Check to see if extent got updated
SELECT content->'extent' FROM collections WHERE id='pgstactest-crudtest';
{"spatial": {"bbox": [[-85.3792495727539, 30.933948516845703, -85.30819702148438, 31.003555297851562]]}, "temporal": {"interval": [["2020-01-01T00:00:00+00:00", "2020-01-01T00:00:00+00:00"]]}}


-- Update item with new datetime that is in a different partition
SELECT update_item((SELECT content || '{"properties":{"datetime":"2023-01-01 00:00:00Z"}}'::jsonb  FROM test_items LIMIT 1));

SELECT * FROM items WHERE collection='pgstactest-crudtest';
 pgstactest-crudtest-1 | 0103000020E610000001000000050000005B3FFD67CD5355C0C4211B4817EF3E400CE6AF90B95355C0A112D731AE003F4004C93B87325855C0BEBC00FBE8003F40FA0AD28C455855C000E5EFDE51EF3E405B3FFD67CD5355C0C4211B4817EF3E40 | pgstactest-crudtest | 2023-01-01 00:00:00+00 | 2023-01-01 00:00:00+00 | {"properties": {"datetime": "2023-01-01 00:00:00Z"}} |

-- Check to see if extent got updated
SELECT content->'extent' FROM collections WHERE id='pgstactest-crudtest';
{"spatial": {"bbox": [[-85.3792495727539, 30.933948516845703, -85.30819702148438, 31.003555297851562]]}, "temporal": {"interval": [["2023-01-01T00:00:00+00:00", "2023-01-01T00:00:00+00:00"]]}}

-- Update item with new datetime that is in a different partition
SELECT upsert_item((SELECT content || '{"properties":{"datetime":"2023-02-01 00:00:00Z"}}'::jsonb  FROM test_items LIMIT 1));


SELECT * FROM items WHERE collection='pgstactest-crudtest';
 pgstactest-crudtest-1 | 0103000020E610000001000000050000005B3FFD67CD5355C0C4211B4817EF3E400CE6AF90B95355C0A112D731AE003F4004C93B87325855C0BEBC00FBE8003F40FA0AD28C455855C000E5EFDE51EF3E405B3FFD67CD5355C0C4211B4817EF3E40 | pgstactest-crudtest | 2023-02-01 00:00:00+00 | 2023-02-01 00:00:00+00 | {"properties": {"datetime": "2023-02-01 00:00:00Z"}} |

-- Delete an item
SELECT delete_item('pgstactest-crudtest-1', 'pgstactest-crudtest');


SELECT * FROM items WHERE collection='pgstactest-crudtest';

WITH c AS (SELECT content FROM test_items LIMIT 2),
aggregated AS (SELECT jsonb_agg(content) as items FROM c)
SELECT create_items(items) FROM aggregated;


SELECT * FROM items WHERE collection='pgstactest-crudtest';
 pgstactest-crudtest-1 | 0103000020E610000001000000050000005B3FFD67CD5355C0C4211B4817EF3E400CE6AF90B95355C0A112D731AE003F4004C93B87325855C0BEBC00FBE8003F40FA0AD28C455855C000E5EFDE51EF3E405B3FFD67CD5355C0C4211B4817EF3E40 | pgstactest-crudtest | 2020-01-01 00:00:00+00 | 2020-01-01 00:00:00+00 | {"properties": {"datetime": "2020-01-01 00:00:00+00"}} |
 pgstactest-crudtest-2 | 0103000020E610000001000000050000005B3FFD67CD5355C0C4211B4817EF3E400CE6AF90B95355C0A112D731AE003F4004C93B87325855C0BEBC00FBE8003F40FA0AD28C455855C000E5EFDE51EF3E405B3FFD67CD5355C0C4211B4817EF3E40 | pgstactest-crudtest | 2020-02-01 00:00:00+00 | 2020-02-01 00:00:00+00 | {"properties": {"datetime": "2020-02-01 00:00:00+00"}} |

DELETE FROM items WHERE collection='pgstactest-crudtest';
DELETE 2
-- upsert items that do not exist yet
WITH c AS (SELECT content FROM test_items LIMIT 2),
aggregated AS (SELECT jsonb_agg(content) as items FROM c)
SELECT upsert_items(items) FROM aggregated;


SELECT * FROM items WHERE collection='pgstactest-crudtest';
 pgstactest-crudtest-1 | 0103000020E610000001000000050000005B3FFD67CD5355C0C4211B4817EF3E400CE6AF90B95355C0A112D731AE003F4004C93B87325855C0BEBC00FBE8003F40FA0AD28C455855C000E5EFDE51EF3E405B3FFD67CD5355C0C4211B4817EF3E40 | pgstactest-crudtest | 2020-01-01 00:00:00+00 | 2020-01-01 00:00:00+00 | {"properties": {"datetime": "2020-01-01 00:00:00+00"}} |
 pgstactest-crudtest-2 | 0103000020E610000001000000050000005B3FFD67CD5355C0C4211B4817EF3E400CE6AF90B95355C0A112D731AE003F4004C93B87325855C0BEBC00FBE8003F40FA0AD28C455855C000E5EFDE51EF3E405B3FFD67CD5355C0C4211B4817EF3E40 | pgstactest-crudtest | 2020-02-01 00:00:00+00 | 2020-02-01 00:00:00+00 | {"properties": {"datetime": "2020-02-01 00:00:00+00"}} |

-- upsert items that already exist and are to be modified
WITH c AS (SELECT content || '{"properties":{"datetime":"2023-02-01 00:00:00Z"}}'::jsonb as content FROM test_items LIMIT 2),
aggregated AS (SELECT jsonb_agg(content) as items FROM c)
SELECT upsert_items(items) FROM aggregated;


SELECT * FROM items WHERE collection='pgstactest-crudtest';
 pgstactest-crudtest-1 | 0103000020E610000001000000050000005B3FFD67CD5355C0C4211B4817EF3E400CE6AF90B95355C0A112D731AE003F4004C93B87325855C0BEBC00FBE8003F40FA0AD28C455855C000E5EFDE51EF3E405B3FFD67CD5355C0C4211B4817EF3E40 | pgstactest-crudtest | 2023-02-01 00:00:00+00 | 2023-02-01 00:00:00+00 | {"properties": {"datetime": "2023-02-01 00:00:00Z"}} |
 pgstactest-crudtest-2 | 0103000020E610000001000000050000005B3FFD67CD5355C0C4211B4817EF3E400CE6AF90B95355C0A112D731AE003F4004C93B87325855C0BEBC00FBE8003F40FA0AD28C455855C000E5EFDE51EF3E405B3FFD67CD5355C0C4211B4817EF3E40 | pgstactest-crudtest | 2023-02-01 00:00:00+00 | 2023-02-01 00:00:00+00 | {"properties": {"datetime": "2023-02-01 00:00:00Z"}} |

-- turn off update_collection_extent then add an item and verify that the extent did not get updated automatically
SET pgstac.update_collection_extent=FALSE;
SET
SELECT get_setting_bool('update_collection_extent');
 f

SELECT update_item((SELECT content || '{"properties":{"datetime":"2024-01-01 00:00:00Z"}}'::jsonb  FROM test_items LIMIT 1));

SELECT content->'extent' FROM collections WHERE id='pgstactest-crudtest';
 {"spatial": {"bbox": [[-85.3792495727539, 30.933948516845703, -85.30819702148438, 31.003555297851562]]}, "temporal": {"interval": [["2023-02-01T00:00:00+00:00", "2023-02-01T00:00:00+00:00"]]}}

